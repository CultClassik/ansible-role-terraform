---
- name: Terraform - Ensure version to be installed exists
  stat:
    path: "/usr/local/bin/terraform{{ tf_install_version }}"
  register: tf_bin_check

- name: Download Terraform binary
  get_url:
    url: "{{ tf_download_url }}"
    dest: /tmp
  when: tf_bin_check.stat.exists == False

- name: Extract Terraform binary
  unarchive:
    src: "/tmp/{{ tf_archive_name }}"
    dest: "/usr/local/bin/terraform{{ tf_install_version }}"
    mode: 774
    remote_src: yes
  when: tf_bin_check.stat.exists == False

# - name: Extract Terraform binary to temp file
#   unarchive:
#     src: "/tmp/{{ tf_archive_name }}"
#     dest: /tmp
#     remote_src: yes
#   when: tf_bin_check.stat.exists == False

# - name: Move Terraform binary
#   copy:
#     src: /tmp/terraform
#     dest: "/usr/local/bin/terraform{{ tf_install_version }}"
#     mode: 774
#     remote_src: yes
#   when: tf_bin_check.stat.exists == False

- name: Delete Terraform archive
  file:
    path: "/tmp/{{ tf_archive_name }}"
    state: absent

- name: Create symlink for default Terraform binary version
  file:
    src: "/usr/local/bin/terraform{{ tf_default_version }}"
    dest: "/usr/local/bin/terraform"
    mode: 774
    state: link

- name: Ensure Terraform plugins directory exists for user on *nix
  file:
    path: "{{ tf_plugin_path[ansible_system].path }}"
    state: directory
    mode: "{{ tf_plugin_path[ansible_system].mode }}"